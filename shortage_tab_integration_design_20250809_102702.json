{
  "metadata": {
    "document_type": "shortage_tab_integration_design",
    "version": "1.0",
    "timestamp": "2025-08-09T10:27:02.183919",
    "purpose": "不足分析タブと按分廃止タブの統合設計"
  },
  "design_specification": {
    "integration_concept": {
      "objective": "過不足分析の精度改善を目的とした統合UI",
      "approach": "1つのタブで複数の計算方式を提供",
      "user_benefit": "シンプルで分かりやすい分析体験"
    },
    "ui_structure": {
      "tab_name": "不足分析",
      "sections": [
        {
          "name": "calculation_method_selector",
          "title": "📊 計算方式選択",
          "component_type": "radio_group",
          "options": [
            {
              "value": "traditional",
              "label": "従来方式（基本計算）",
              "description": "従来の不足分析計算"
            },
            {
              "value": "proportional_abolition",
              "label": "按分廃止方式（改良計算）",
              "description": "職種別精緻分析による改良計算",
              "default": true
            },
            {
              "value": "comparison",
              "label": "比較表示（両方同時）",
              "description": "従来方式と改良方式の比較"
            }
          ],
          "layout": "horizontal_cards"
        },
        {
          "name": "method_explanation",
          "title": "💡 選択された計算方式の説明",
          "component_type": "info_panel",
          "dynamic_content": true
        },
        {
          "name": "analysis_results",
          "title": "📈 分析結果",
          "component_type": "results_display",
          "subsections": [
            {
              "name": "summary_metrics",
              "title": "主要指標",
              "component_type": "metrics_cards"
            },
            {
              "name": "shortage_visualization",
              "title": "不足状況グラフ",
              "component_type": "plotly_charts"
            },
            {
              "name": "role_breakdown",
              "title": "職種別内訳",
              "component_type": "breakdown_table"
            }
          ]
        },
        {
          "name": "detailed_data",
          "title": "📋 詳細データ",
          "component_type": "data_table",
          "features": [
            "sorting",
            "filtering",
            "export_csv",
            "pagination"
          ]
        }
      ],
      "responsive_design": true,
      "accessibility": true
    },
    "calculation_methods": {
      "traditional": {
        "name": "従来方式",
        "description": "シンプルな時間ベース不足計算",
        "data_source": "shortage_time.parquet",
        "calculation_logic": "basic_shortage_calculation",
        "pros": [
          "シンプル",
          "高速",
          "理解しやすい"
        ],
        "cons": [
          "精度に限界",
          "職種別の細かい分析不可"
        ]
      },
      "proportional_abolition": {
        "name": "按分廃止方式",
        "description": "職種別精緻分析による改良計算",
        "data_source": [
          "proportional_abolition_role_summary.parquet",
          "proportional_abolition_organization_summary.parquet"
        ],
        "calculation_logic": "proportional_abolition_calculation",
        "pros": [
          "高精度",
          "職種別詳細分析",
          "実態に即した計算"
        ],
        "cons": [
          "やや複雑",
          "計算時間増加"
        ]
      },
      "comparison": {
        "name": "比較表示",
        "description": "両方式の結果を並列表示",
        "data_source": "both",
        "calculation_logic": "dual_calculation",
        "display_format": "side_by_side_comparison"
      }
    },
    "data_flow": {
      "input_data": {
        "scenario_selection": "selected_scenario",
        "calculation_method": "user_selected_method",
        "filters": "optional_filters"
      },
      "processing_pipeline": [
        {
          "step": "data_loading",
          "description": "選択された計算方式に基づくデータ読み込み",
          "conditional_logic": true
        },
        {
          "step": "calculation_execution",
          "description": "計算方式別の処理実行",
          "branches": [
            "traditional",
            "proportional_abolition",
            "comparison"
          ]
        },
        {
          "step": "result_formatting",
          "description": "UI表示用のデータ整形",
          "output_format": "unified_structure"
        },
        {
          "step": "visualization_generation",
          "description": "グラフとテーブルの生成",
          "components": [
            "metrics_cards",
            "charts",
            "tables"
          ]
        }
      ],
      "output_data": {
        "summary_metrics": "key_shortage_indicators",
        "visualizations": "plotly_figures",
        "detailed_data": "formatted_dataframes"
      },
      "caching_strategy": {
        "cache_level": "calculation_result",
        "invalidation_triggers": [
          "scenario_change",
          "method_change"
        ],
        "performance_optimization": true
      }
    },
    "implementation_plan": {
      "phase1_preparation": {
        "description": "既存コードの分析と準備",
        "tasks": [
          "create_shortage_tab関数の分析",
          "create_proportional_abolition_tab関数の分析",
          "共通機能の抽出",
          "統合可能な部分の特定"
        ],
        "estimated_hours": 4
      },
      "phase2_core_implementation": {
        "description": "メイン統合機能の実装",
        "tasks": [
          "新しいcreate_integrated_shortage_tab関数の作成",
          "計算方式選択ロジックの実装",
          "データフロー統合の実装",
          "UI統合の実装"
        ],
        "estimated_hours": 8
      },
      "phase3_testing_refinement": {
        "description": "テストと調整",
        "tasks": [
          "各計算方式の動作確認",
          "UIの動作テスト",
          "データフローの検証",
          "エラーハンドリングの確認"
        ],
        "estimated_hours": 4
      },
      "phase4_cleanup": {
        "description": "旧コードの削除と最終調整",
        "tasks": [
          "旧按分廃止タブの削除",
          "コールバック関数の調整",
          "ドキュメント更新",
          "最終動作確認"
        ],
        "estimated_hours": 2
      },
      "total_estimated_effort": "18時間（約2-3日）",
      "risk_mitigation": [
        "バックアップの作成",
        "段階的実装",
        "詳細テスト",
        "ロールバック計画"
      ]
    }
  },
  "component_specifications": {
    "calculation_method_selector": {
      "component_id": "shortage-calculation-method",
      "dash_component": "dcc.RadioItems",
      "styling": {
        "display": "flex",
        "flexDirection": "row",
        "gap": "20px",
        "marginBottom": "20px"
      },
      "options_styling": "card_style",
      "callback_triggers": [
        "value"
      ]
    },
    "method_explanation_panel": {
      "component_id": "shortage-method-explanation",
      "dash_component": "html.Div",
      "dynamic_content": true,
      "update_trigger": "calculation-method-change"
    },
    "integrated_results_display": {
      "component_id": "shortage-integrated-results",
      "dash_component": "html.Div",
      "children": [
        "summary_metrics_cards",
        "shortage_charts",
        "role_breakdown_table",
        "detailed_data_table"
      ],
      "responsive": true
    },
    "comparison_display": {
      "component_id": "shortage-comparison-display",
      "dash_component": "html.Div",
      "layout": "two_column",
      "columns": [
        "traditional_results",
        "proportional_results"
      ],
      "show_differences": true
    },
    "sample_implementations": {
      "method_selector": "\n# 計算方式選択コンポーネント\ndcc.RadioItems(\n    id='shortage-calculation-method',\n    options=[\n        {'label': '従来方式（基本計算）', 'value': 'traditional'},\n        {'label': '按分廃止方式（改良計算）', 'value': 'proportional_abolition'},\n        {'label': '比較表示（両方同時）', 'value': 'comparison'}\n    ],\n    value='proportional_abolition',  # デフォルト\n    style={'display': 'flex', 'flexDirection': 'row', 'gap': '20px'}\n)\n",
      "callback_structure": "\n@app.callback(\n    Output('shortage-tab-container', 'children'),\n    [Input('shortage-calculation-method', 'value'),\n     Input('selected-scenario', 'value')]\n)\ndef update_integrated_shortage_tab(method, scenario):\n    if method == 'traditional':\n        return create_traditional_shortage_display(scenario)\n    elif method == 'proportional_abolition':\n        return create_proportional_shortage_display(scenario)\n    elif method == 'comparison':\n        return create_comparison_shortage_display(scenario)\n    else:\n        return html.Div(\"計算方式を選択してください\")\n",
      "unified_function_template": "\ndef create_integrated_shortage_tab(selected_scenario: str = None, method: str = 'proportional_abolition') -> html.Div:\n    \"\"\"統合された不足分析タブを作成\"\"\"\n    try:\n        # 計算方式選択UI\n        method_selector = create_method_selector(method)\n        \n        # 説明パネル\n        explanation_panel = create_method_explanation(method)\n        \n        # 結果表示\n        if method == 'comparison':\n            results_display = create_comparison_results(selected_scenario)\n        else:\n            results_display = create_single_method_results(selected_scenario, method)\n        \n        return html.Div([\n            method_selector,\n            explanation_panel,\n            results_display\n        ])\n    \n    except Exception as e:\n        return error_display(f\"不足分析タブエラー: {e}\")\n"
    }
  },
  "implementation_guidelines": {
    "coding_standards": "既存のdash_app.pyのスタイルに準拠",
    "error_handling": "既存パターンを踏襲",
    "logging": "詳細なログ出力を継続",
    "performance": "キャッシュとメモ化を活用"
  },
  "quality_assurance": {
    "testing_requirements": [
      "各計算方式の動作確認",
      "UI切り替えの動作確認",
      "データ整合性の確認",
      "エラーハンドリングの確認"
    ],
    "acceptance_criteria": [
      "ユーザーが計算方式を簡単に切り替えられる",
      "両方式の結果が正確に表示される",
      "比較表示が適切に動作する",
      "既存機能が破損しない"
    ]
  }
}