{
  "metadata": {
    "investigation_type": "Phase0_Detailed_Code_Investigation",
    "timestamp": "2025-08-09T10:59:47.815329",
    "scope": "shortage_tab_proportional_tab_integration_analysis"
  },
  "investigation_results": {
    "existing_code_analysis": {
      "shortage_tab_analysis": {
        "function_name": "create_shortage_tab",
        "start_line": 3216,
        "end_line": 3525,
        "line_count": 309,
        "complexity_score": {
          "if_statements": 20,
          "for_loops": 6,
          "while_loops": 0,
          "try_blocks": 3,
          "function_calls": 173,
          "complexity_score": 52.3,
          "complexity_level": "high"
        },
        "data_dependencies": [
          ")\n\n        if df_shortage_role is None:\n\n            df_shortage_role = pd.DataFrame()\n        df_shortage_emp = data_get(",
          ")\n\n        if events_df is None:\n\n            events_df = pd.DataFrame()\n        if not events_df.empty:\n            content.append(html.Hr())  # type: ignore\n            content.append(html.H4(",
          ")}",
          ")\n\n            if shortage_time_df is None:\n\n                shortage_time_df = pd.DataFrame()\n            if not shortage_time_df.empty:\n                try:\n                    numeric_cols = shortage_time_df.select_dtypes(include=[np.number])\n                    if not numeric_cols.empty:\n                        total_shortage_slots = float(np.nansum(numeric_cols.values))\n                        slot_hours = get_dynamic_slot_hours()\n                        total_lack = total_shortage_slots * slot_hours\n                        log.info(f"
        ],
        "ui_components": [
          "dcc.RadioItems",
          "dcc.Graph",
          "go.Bar",
          "html.H3",
          "html.Summary",
          "dcc.Markdown",
          "html.P",
          "html.Label",
          "html.Button",
          "html.H5",
          "html.Details",
          "html.H4",
          "html.Br",
          "html.Hr",
          "dcc.Dropdown",
          "go.Figure",
          "dash_table.DataTable",
          "html.Div"
        ]
      },
      "proportional_tab_analysis": {
        "function_name": "create_proportional_abolition_tab",
        "start_line": 3526,
        "end_line": 3787,
        "line_count": 261,
        "complexity_score": {
          "if_statements": 17,
          "for_loops": 1,
          "while_loops": 0,
          "try_blocks": 1,
          "function_calls": 98,
          "complexity_score": 29.8,
          "complexity_level": "medium"
        },
        "data_dependencies": [
          ")\n\n        if df_proportional_role is None:\n\n            df_proportional_role = pd.DataFrame()\n        df_proportional_org = data_get("
        ],
        "ui_components": [
          "html.H3",
          "html.P",
          "html.Ol",
          "html.H5",
          "html.H4",
          "html.Br",
          "html.Li",
          "html.H2",
          "dash_table.DataTable",
          "html.Ul",
          "html.Div"
        ]
      },
      "shared_components": {
        "shared_ui_components": [
          "html.H3",
          "html.P",
          "html.H5",
          "html.H4",
          "html.Br",
          "dash_table.DataTable",
          "html.Div"
        ],
        "shared_data_dependencies": [],
        "ui_reuse_potential": 0.3181818181818182,
        "data_overlap": false
      },
      "code_complexity": {
        "total_lines": 10704,
        "function_count": 152,
        "callback_count": 57,
        "import_count": 110,
        "complexity_rating": "very_high"
      }
    },
    "data_format_analysis": {
      "shortage_data_format": {
        "shortage_time.parquet": {
          "exists": false
        },
        "shortage_role_summary.parquet": {
          "exists": false
        },
        "shortage_employment_summary.parquet": {
          "exists": false
        }
      },
      "proportional_data_format": {
        "proportional_abolition_role_summary.parquet": {
          "exists": true,
          "shape": [
            5,
            6
          ],
          "columns": [
            "職種",
            "Need時間/日",
            "実配置時間/日",
            "過不足時間/日",
            "現在スタッフ数",
            "状態"
          ],
          "dtypes": {
            "職種": "object",
            "Need時間/日": "float64",
            "実配置時間/日": "float64",
            "過不足時間/日": "float64",
            "現在スタッフ数": "int64",
            "状態": "object"
          },
          "sample_data": {
            "職種": {
              "0": "介護（W_2）",
              "1": "介護（W_3）"
            },
            "Need時間/日": {
              "0": 15.2,
              "1": 8.4
            },
            "実配置時間/日": {
              "0": 12.6,
              "1": 4.8
            },
            "過不足時間/日": {
              "0": 2.6,
              "1": 3.6
            },
            "現在スタッフ数": {
              "0": 8,
              "1": 0
            },
            "状態": {
              "0": "SHORTAGE",
              "1": "SHORTAGE"
            }
          }
        },
        "proportional_abolition_organization_summary.parquet": {
          "exists": true,
          "shape": [
            1,
            5
          ],
          "columns": [
            "total_need",
            "total_actual",
            "total_shortage",
            "status",
            "total_staff_count"
          ],
          "dtypes": {
            "total_need": "float64",
            "total_actual": "float64",
            "total_shortage": "float64",
            "status": "object",
            "total_staff_count": "int64"
          },
          "sample_data": {
            "total_need": {
              "0": 52.400000000000006
            },
            "total_actual": {
              "0": 45.5
            },
            "total_shortage": {
              "0": 6.9
            },
            "status": {
              "0": "SHORTAGE"
            },
            "total_staff_count": {
              "0": 21
            }
          }
        }
      },
      "format_compatibility": {
        "column_overlap": {},
        "data_type_compatibility": {},
        "structural_differences": {},
        "integration_complexity": "unknown"
      },
      "conversion_requirements": {}
    },
    "dependency_mapping": {
      "import_dependencies": {
        "total_imports": 110,
        "unique_modules": [
          "unicodedata",
          "datetime",
          "pandas",
          "shift_suite.tasks.shortage_factor_analyzer",
          "shift_suite.tasks.axis7_legal_regulatory_mece_extractor",
          "dash_components.analysis_engine",
          "shift_suite.tasks.daily_cost",
          "direct_excel_reader",
          "proportional_shortage_helper",
          "improved_data_validation",
          "threading",
          "shortage_logger",
          "shift_suite.tasks.axis11_performance_improvement_mece_extractor",
          "shift_suite.tasks.shift_mind_reader",
          "shift_suite.tasks.enhanced_data_ingestion",
          "pyarrow.parquet",
          "numpy",
          "shift_suite.tasks.weekday_role_need_visualizer",
          "shift_suite.tasks.analysis_dashboard",
          "gc",
          "shift_suite.tasks.axis5_medical_care_quality_mece_extractor",
          "logging",
          "dash.dependencies",
          "shift_suite.tasks.mece_fact_extractor",
          "shift_suite.tasks.hierarchical_truth_analyzer",
          "shutil",
          "base64",
          "shift_suite.tasks.analyzers.synergy",
          "plotly.graph_objects",
          "os",
          "shift_suite.tasks.blueprint_analyzer",
          "shift_suite.tasks.quick_logic_analysis",
          "shift_suite.tasks.analyzers.synergy_enhanced",
          "shift_suite.tasks.axis12_strategy_future_mece_extractor",
          "shift_suite.tasks.utils",
          "shift_suite.tasks.axis6_cost_efficiency_mece_extractor",
          "dash_components.processing_monitor",
          "shift_suite.tasks.integrated_creation_logic_viewer",
          "signal",
          "zipfile",
          "flask",
          "collections",
          "shift_suite.tasks.constants",
          "shift_suite.tasks.time_axis_shortage_calculator",
          "shift_suite.tasks.proportional_calculator",
          "pathlib",
          "shift_suite.tasks.shortage",
          "dash_components.data_ingestion",
          "hashlib",
          "shift_suite.tasks.advanced_blueprint_engine_v2",
          "traceback",
          "dash",
          "dash_components.memory_manager",
          "shift_suite.tasks",
          "typing",
          "json",
          "shift_suite.tasks.axis8_staff_satisfaction_mece_extractor",
          "plotly.io",
          "shift_suite.tasks.axis2_staff_mece_extractor",
          "shift_suite.tasks.axis3_time_calendar_mece_extractor",
          "shift_suite.tasks.analyzers.team_dynamics",
          "shift_suite.tasks.comprehensive_dashboard",
          "shift_suite.tasks.unified_analysis_manager",
          "improved_ui_components",
          "dash_components.visualization_engine",
          "tempfile",
          "functools",
          "shift_suite.tasks.axis4_demand_load_mece_extractor",
          "unified_data_pipeline_architecture",
          "plotly.express",
          "sklearn.tree",
          "time",
          "shift_suite.tasks.axis9_business_process_mece_extractor",
          "shift_suite.tasks.dash_fact_book_integration",
          "io",
          "removed",
          "shift_suite.tasks.truth_assured_decomposer",
          "shift_suite.tasks.axis10_risk_emergency_mece_extractor",
          "weakref",
          "dash.exceptions",
          "dash_cytoscape",
          "matplotlib.pyplot",
          "psutil"
        ],
        "shift_suite_imports": [
          "shift_suite.tasks.utils",
          "shift_suite.tasks.shortage_factor_analyzer",
          "shift_suite.tasks",
          "shift_suite.tasks.daily_cost",
          "shift_suite.tasks",
          "shift_suite.tasks.shortage",
          "shift_suite.tasks.constants",
          "shift_suite.tasks.shift_mind_reader",
          "shift_suite.tasks.advanced_blueprint_engine_v2",
          "shift_suite.tasks.unified_analysis_manager",
          "shift_suite.tasks.dash_fact_book_integration",
          "shift_suite.tasks.analysis_dashboard",
          "shift_suite.tasks.enhanced_data_ingestion",
          "shift_suite.tasks.truth_assured_decomposer",
          "shift_suite.tasks.hierarchical_truth_analyzer",
          "shift_suite.tasks.weekday_role_need_visualizer",
          "shift_suite.tasks.comprehensive_dashboard",
          "shift_suite.tasks.proportional_calculator",
          "shift_suite.tasks.time_axis_shortage_calculator",
          "shift_suite.tasks.analyzers.synergy_enhanced",
          "shift_suite.tasks.analyzers.synergy",
          "shift_suite.tasks.analyzers.team_dynamics",
          "shift_suite.tasks.blueprint_analyzer",
          "shift_suite.tasks.integrated_creation_logic_viewer",
          "shift_suite.tasks.quick_logic_analysis",
          "shift_suite.tasks.utils",
          "shift_suite.tasks.advanced_blueprint_engine_v2",
          "shift_suite.tasks.mece_fact_extractor",
          "shift_suite.tasks.mece_fact_extractor",
          "shift_suite.tasks.axis2_staff_mece_extractor",
          "shift_suite.tasks.axis3_time_calendar_mece_extractor",
          "shift_suite.tasks.axis4_demand_load_mece_extractor",
          "shift_suite.tasks.axis5_medical_care_quality_mece_extractor",
          "shift_suite.tasks.axis6_cost_efficiency_mece_extractor",
          "shift_suite.tasks.axis7_legal_regulatory_mece_extractor",
          "shift_suite.tasks.axis8_staff_satisfaction_mece_extractor",
          "shift_suite.tasks.axis9_business_process_mece_extractor",
          "shift_suite.tasks.axis10_risk_emergency_mece_extractor",
          "shift_suite.tasks.axis11_performance_improvement_mece_extractor",
          "shift_suite.tasks.axis12_strategy_future_mece_extractor",
          "shift_suite.tasks.mece_fact_extractor",
          "shift_suite.tasks.axis2_staff_mece_extractor",
          "shift_suite.tasks.advanced_blueprint_engine_v2",
          "shift_suite.tasks.mece_fact_extractor",
          "shift_suite.tasks.axis2_staff_mece_extractor",
          "shift_suite.tasks.axis3_time_calendar_mece_extractor",
          "shift_suite.tasks.advanced_blueprint_engine_v2"
        ],
        "external_dependencies": [
          "base64",
          "io",
          "logging",
          "tempfile",
          "zipfile",
          "threading",
          "time",
          "weakref",
          "psutil",
          "functools",
          "typing",
          "collections",
          "unicodedata",
          "dash",
          "dash_cytoscape",
          "numpy",
          "pandas",
          "pyarrow.parquet",
          "plotly.express",
          "plotly.graph_objects",
          "dash",
          "dash.dependencies",
          "dash.exceptions",
          "flask",
          "traceback",
          "gc",
          "improved_data_validation",
          "improved_ui_components",
          "unified_data_pipeline_architecture",
          "dash_components.data_ingestion",
          "dash_components.processing_monitor",
          "dash_components.analysis_engine",
          "direct_excel_reader",
          "dash_components.memory_manager",
          "dash_components.visualization_engine",
          "shortage_logger",
          "datetime",
          "proportional_shortage_helper",
          "removed",
          "sklearn.tree",
          "matplotlib.pyplot",
          "logging",
          "hashlib",
          "tempfile",
          "signal",
          "traceback",
          "traceback",
          "shutil",
          "traceback",
          "traceback",
          "traceback",
          "datetime",
          "datetime",
          "datetime",
          "plotly.io"
        ]
      },
      "function_dependencies": {
        "shortage_related_functions": [
          "shortage_dfを使わない版",
          "shortage_timeデータが見つかりません",
          "shortage_time",
          "shortage_heatmap_detail",
          "shortage_df",
          "shortage_data",
          "shortage_helper",
          "shortage_dash_log",
          "shortage_hash",
          "shortage_roleが空です",
          "shortage_contribution_h",
          "shortage_time_df",
          "shortage_analysis",
          "shortage_role_filtered初期化",
          "shortage_factor_analyzer",
          "shortage_timeから直接計算",
          "shortage_timeより",
          "shortage_role_filtered状態",
          "shortage_time_CORRECTED",
          "shortage_role_filteredエラーを検出",
          "shortage_meta",
          "shortage_role_filteredに追加",
          "shortage_long",
          "shortage_emp読み込み完了",
          "shortage_hour",
          "shortage_role_summary",
          "create_shortage_tab呼び出し開始",
          "shortage_role_file",
          "shortage_role_filteredエラーの特別処理",
          "shortage_count",
          "shortage_logger",
          "shortage_log_path",
          "shortage_and_brief",
          "shortage_roles",
          "shortage_log",
          "shortage_color",
          "shortage_content",
          "shortage_events",
          "create_shortage_tab",
          "shortage_role読み込み完了",
          "shortage_hours",
          "create_shortage_tab完了",
          "shortage_employment_summary",
          "shortage_dashboard_logger",
          "shortage_role_filtered",
          "shortage_from_data",
          "shortage_timeから直接取得",
          "shortage_timeが空の場合",
          "shortage_timeが空のため",
          "shortage_summary",
          "shortage_slots",
          "shortage_role",
          "shortage_emp_filtered",
          "shortage_time読み取りエラー",
          "shortage_role_excessに追加",
          "shortage_role職種",
          "shortage_file",
          "shortage_role_excess",
          "shortage_timeから正確な値を取得",
          "create_shortage_from_heat_all",
          "shortage_role_filtered存在チェック",
          "shortage_time_path",
          "shortage_calculator",
          "shortage_ratio_heatmap",
          "shortage_tab",
          "shortage_emp",
          "shortage_insights",
          "shortage_role_summaryは異常値なので使用しない"
        ],
        "proportional_related_functions": [
          "create_proportional_summary_df",
          "proportional_abolition_organization_summary",
          "create_proportional_abolition_tab",
          "proportional_abolition_tab",
          "proportional_need",
          "proportional_shortage",
          "create_proportional_abolition_tab完了",
          "proportional_calculator",
          "proportional_abolition",
          "proportional_role",
          "proportional_abolition_role_summary",
          "proportional_abolition_content",
          "proportional_shortage_helper",
          "proportional_org",
          "create_proportional_abolition_tab呼び出し開始",
          "proportional_shortage_data"
        ],
        "shared_functions": []
      },
      "data_dependencies": {},
      "callback_dependencies": {}
    },
    "callback_analysis": {
      "shortage_tab_callbacks": {
        "count": 0,
        "callbacks": []
      },
      "proportional_tab_callbacks": {
        "count": 0,
        "callbacks": []
      },
      "callback_conflicts": {
        "conflicting_ids": {},
        "conflict_count": 0,
        "risk_level": "low"
      },
      "integration_impact": {}
    },
    "risk_assessment": {
      "code_modification_risks": {
        "shortage_tab_complexity": 0,
        "proportional_tab_complexity": 0,
        "integration_complexity": 0,
        "risk_level": "medium"
      },
      "data_compatibility_risks": {
        "format_integration_complexity": "unknown",
        "data_conversion_required": false,
        "risk_level": "medium"
      },
      "ui_integration_risks": {
        "callback_conflicts": 0,
        "id_collision_risk": false,
        "risk_level": "low"
      },
      "performance_risks": {},
      "overall_risk_level": "medium"
    },
    "compatibility_matrix": {
      "ui_compatibility": {
        "reuse_potential": 0,
        "shared_components": [],
        "compatibility_score": 0,
        "integration_difficulty": "high"
      },
      "data_compatibility": {
        "column_overlap_ratio": 0,
        "integration_complexity": "unknown",
        "compatibility_score": 0,
        "conversion_required": true
      },
      "function_compatibility": {},
      "integration_feasibility": {
        "overall_compatibility_score": 0.0,
        "feasibility_level": "low",
        "recommended_approach": "separate_implementation_with_shared_ui",
        "critical_challenges": []
      }
    }
  },
  "executive_summary": {
    "investigation_completion": "successful",
    "overall_risk_level": "medium",
    "integration_feasibility": "low",
    "recommended_approach": "separate_implementation_with_shared_ui",
    "critical_findings": [
      "統合対象コードが570行と大規模"
    ],
    "next_phase_readiness": {
      "ready_for_phase1": true,
      "confidence_level": "medium",
      "recommended_timeline": "proceed_with_caution"
    }
  },
  "recommendations": {
    "integration_approach": "separate_implementation_with_shared_ui",
    "risk_mitigation_priorities": [],
    "implementation_recommendations": [
      "段階的統合アプローチを採用",
      "データ変換レイヤーの事前実装",
      "UIコンポーネントID名前空間の整理",
      "包括的テスト計画の策定"
    ],
    "timeline_adjustments": {
      "additional_preparation_needed": false,
      "estimated_additional_hours": 4
    }
  }
}